#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")

#@overlay/match by=overlay.subset({"kind":"AWSMachineTemplate"}),expects="0+"
---
metadata:
  #@overlay/replace via=lambda old,new: old+"-"+new
  name: #@ data.values.aws.ami.id
  #@overlay/match missing_ok=True
  annotations:
    #@overlay/match missing_ok=True
    kapp.k14s.io/delete-strategy: "orphan"
spec:
  template:
    spec:
      #@overlay/match missing_ok=True
      ami:
        #@overlay/match missing_ok=True
        id: #@ data.values.aws.ami.id

#@overlay/match by=overlay.subset({"kind":"KubeadmControlPlane"}),expects="0+"
---
spec:
  infrastructureTemplate:
    #@overlay/replace via=lambda old,new: old+"-"+new
    name: #@ data.values.aws.ami.id
  kubeadmConfigSpec:
    clusterConfiguration:
      dns:
        imageRepository: #@ data.values.kubeadmConfigSpec.dns.imageRepository
        imageTag: #@ data.values.kubeadmConfigSpec.dns.imageTag
        type: #@ data.values.kubeadmConfigSpec.dns.type
      etcd:
        local:
          imageRepository: #@ data.values.kubeadmConfigSpec.etcd.local.imageRepository
          imageTag: #@ data.values.kubeadmConfigSpec.etcd.local.imageTag
      kubernetesVersion: #@ data.values.kubeadmConfigSpec.kubernetesVersion
      imageRepository: #@ data.values.kubeadmConfigSpec.imageRepository
  version: #@ data.values.kubeadmConfigSpec.kubernetesVersion

#@overlay/match by=overlay.subset({"kind":"MachineDeployment"}),expects="0+"
---
spec:
  template:
    spec:
      version: #@ data.values.kubeadmConfigSpec.kubernetesVersion
      infrastructureRef:
        #@overlay/match missing_ok=True
        #@overlay/replace via=lambda old,new: old+"-"+new
        name: #@ data.values.aws.ami.id