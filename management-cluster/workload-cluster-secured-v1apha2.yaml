apiVersion: cluster.x-k8s.io/v1alpha3
kind: Cluster
metadata:
  name: secured-workload
spec:
  clusterNetwork:
    pods:
      cidrBlocks: ["192.168.0.0/16"]
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: AWSCluster
    name: secured-workload
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AWSCluster
metadata:
  name: secured-workload
spec:
  # Change this value to the region you want to deploy the cluster in.
  region: us-gov-east-1
  # Change this value to a valid SSH Key Pair present in your AWS Account.
  sshKeyName: cluster-api-provider-aws
  additionalTags:
    another: additionalTags
    that-can-be: added
---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: Machine
metadata:
  name: secured-workload-controlplane-0
  labels:
    cluster.x-k8s.io/control-plane: "true"
    cluster.x-k8s.io/cluster-name: "secured-workload"
spec:
  clusterName: secured-workload
  version: v1.17.3
  bootstrap:
    configRef:
      apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
      kind: KubeadmConfig
      name: cis-benchmark-master
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
    kind: AWSMachine
    name: ami-0ad797a22a747425e
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AWSMachine
metadata:
  name: ami-0ad797a22a747425e
spec:
  instanceType: m5.large
  # This IAM profile is part of the pre-requisites.
  iamInstanceProfile: "control-plane.cluster-api-provider-aws.sigs.k8s.io"
  # Change this value to a valid SSH Key Pair present in your AWS Account.
  sshKeyName: cluster-api-provider-aws
  imageLookupOrg: "894844345642"
  imageLookupBaseOS: "amazon-2"
  ami:
    id: "ami-0ad797a22a747425e"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfig
metadata:
  name: cis-benchmark-master
spec:
  # For more information about these values,
  # refer to the Kubeadm Bootstrap Provider documentation.
  initConfiguration:
    nodeRegistration:
      name: '{{ ds.meta_data.local_hostname }}'
      kubeletExtraArgs:
        cloud-provider: aws
  clusterConfiguration:
    apiServer:
      extraArgs:
        cloud-provider: aws
        anonymous-auth: "false"
        profiling: "false"
        # Deprecated and removed, server will error out if present.
        # repair-malformed-updates: "false"
        enable-admission-plugins: AlwaysPullImages,PodSecurityPolicy,ServiceAccount,EventRateLimit,NamespaceLifecycle
        admission-control-config-file: /etc/kubernetes/admission-control-config.yaml
        audit-log-path: /var/log/kube-apiserver/kube-apiserver.log
        audit-policy-file: /etc/kubernetes/audit-policy.yaml
        audit-log-maxage: "30"
        audit-log-maxbackup: "10"
        audit-log-maxsize: "100"
        tls-cipher-suites: "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_GCM_SHA256"
        tls-min-version: VersionTLS12
        service-account-lookup: "true"
        encryption-provider-config: /etc/kubernetes/encryption-provider.yaml
      extraVolumes:
      - name: audit-policy
        hostPath: /etc/kubernetes/audit-policy.yaml
        mountPath: /etc/kubernetes/audit-policy.yaml
      - name: audit-logs
        hostPath: /var/log/kube-apiserver
        mountPath: /var/log/kube-apiserver
      - name: encryption-provider
        hostPath: /etc/kubernetes/encryption-provider.yaml
        mountPath: /etc/kubernetes/encryption-provider.yaml
      - name: admission-control-config
        hostPath: /etc/kubernetes/admission-control-config.yaml
        mountPath: /etc/kubernetes/admission-control-config.yaml
      - name: event-rate-limit-config
        hostPath: /etc/kubernetes/event-rate-limit-config.yaml
        mountPath: /etc/kubernetes/event-rate-limit-config.yaml
    controllerManager:
      extraArgs:
        cloud-provider: aws
        terminated-pod-gc-threshold: "10"
        profiling: "false"
    scheduler:
      extraArgs:
        profiling: "false"
      
  files:
  - path: /etc/kubernetes/encryption-provider.yaml
    owner: "root:root"
    permissions: "0600"
    content: |
      apiVersion: apiserver.config.k8s.io/v1
      kind: EncryptionConfiguration
      resources:
        - resources:
          - secrets
          providers:
          - aescbc:
              keys:
              - name: key1
                # TODO Generate this on the system
                secret: a4Cw/2z/q/dYB18WlzxZelwFimzY9Nq1RHvSKL8vITQ=
          - identity: {}
  - path: /etc/kubernetes/admission-control-config.yaml
    owner: "root:root"
    permissions: "0600"
    content: |
      apiVersion: apiserver.config.k8s.io/v1
      kind: AdmissionConfiguration
      plugins:
      - name: EventRateLimit
        path: /etc/kubernetes/event-rate-limit-config.yaml
  - path: /etc/kubernetes/event-rate-limit-config.yaml
    owner: "root:root"
    permissions: "0600"
    content: |
      apiVersion: eventratelimit.admission.k8s.io/v1alpha1
      kind: Configuration
      limits:
      - type: Namespace
        qps: 50
        burst: 100
        cacheSize: 2000
      - type: User
        qps: 10
        burst: 50
  - path: /etc/kubernetes/audit-policy.yaml
    owner: "root:root"
    permissions: "0600"
    encoding: "gzip+base64"
    # See "audit-config.yaml" this is just that file `gzip < audit-config.yaml | base64`
    content: |
      H4sIAH60Xl4AA+1Y32/jNgx+v7+CcIENKOIYBQbskD0dbkP3oz0Uvbu9DHuQZcbWIkueJCdN//qj
      bMWxYydNtxb3cg9tHIkmP5KfSCoAF/CpQFhqKfVGqBxYnQkHlZaCb0FYSJnFDLQCVxhEsLo2HC0s
      jS6hrqwzyMrFGyA9ADEJIazqFI1CR1KZ5hbwgZWVxAUUzlV2kSSGbea5cEWd1hYN18qhcnOuy2T/
      arLB1AqHScmsQ5MEqQRVEvTZpIHa/o9bwPMtK+UAzPX7X8DgEg0qjsGtPZIWxaHp3mMqddpBkHXz
      mXOkP+EhLUVeG4wLlBWauS0ubn58+0Nn//MfcCuUoBhtQS/hd3pdnAZRBnG9/KcVJqO6zuJKMrfU
      poyFWhpCY2ruyPAA3kpXNpFijfFVEwbwOOiPVeJPNFZotWiTO1+9tXOhk/VVio5dkchKqGwBdw0u
      +qpL4T46lqP1ifWeRPf4b43W3SNHspBFtG5quRM45JBppS1sKO5QMlUzKYlNGWVQLAXxiVkoRF7E
      ay3rEoGpDOjd2Ai7mgWVVkNmdOWzWM4DDolrlAv4oBU2KwCeQXYBf0V2S1EoFz53cWX0wzb6O4is
      0aSNyIY5XnTLBgOXF2HBG8iNrqsFRBEB4Npgt9WXJ1WoskoL5Ww0g4ggrClXg+fEOuZqG6xNIVes
      RFuxoJDCRgZs7HluKJDk1diBHN3LwG+pW7Jqb6Qv88FDm0YVS2QZfahcqIcT3nV58QmRHjdBkpgz
      qiphKfDBbV/NTaWzNivNw9Mp8aCvve4+o1olr5eL/wJyYKjP/F6i6NjRETZHBC0vMKMTPLEfKMw4
      17VyQbzd2tG+Z2cqLuRMXWXMYRehIdl7Kl/6OJ7ByOAL1UXvKZrXzG3ndpPg7tsuy8PFpVBMisdd
      1C7gZ62+d1QYc/j17h0skcqXL68lOiO4faooPpcihymU1IrOC8MOUNtYohF6KuEWSQXLYq2oEXy+
      vzmBXml1H6x5wb7BpEAmXfF42V9bt92tv2Q3LCfHLkdIWE1YqOhwIme271NOA0fjmFDeerxz1gOF
      irniiViPasbAzP4QTDtG7TUhMl6O40bGiNMdzOMg/t/haax0pLshw1GlMxomdO550DwHwgJzcEtT
      Ax1u1uIYYtrtHcPVQ/VmEswxwzt0vkg24wJtQrsHnKaLMJE2NRQYTR2H4wVnClIEyUyOMxpMdzEm
      65VW1o+02tCsWiH31GjrV1/r0NEwEB3rdn4S2LcPP5CkEss4o6GSO216+yeq7fSro2oVSu0sql5u
      vhn0oslUnIjEuS306wC/gMynCLmvgdxR5QgEeiZDusLd6iM951HkjLzvNPdq9Th6h1507n1EbtDZ
      GbxvprxbmvJmzRH4pFdIFWgtcNN669X7mmdR0V2LBnv4DlJqQnRf8Ye4N4k3ZbspoK65Vg1rwPx5
      ReA5+bStMz6Vk0Nrp6lXcikYoRUd0+p8JEwbiS5u1zSSGqxsm+s+G34CuxKTN5Fhjic7KH0+cfE4
      Go39BstKYX2XM5j7G2LfyWgsXQl8cD6p5MspqTO1UcTHq1PxnhbTRjw+KaUtnUKabsabaRO90bJv
      2HSZ9C32uI/7MIz3pqaW/r5Ct9GG7sb5UZH2Kj9eNynj8/NcD4P4KSsWnaP940gt9QUa5A7nL1yy
      WrqWqk3tWim9UfDu7rfpSnUfCt03nn7j6VflKbVj0JQ2c2z0Pegwhz9YtbLjH62+AD8/IGruFAAA

---
apiVersion: cluster.x-k8s.io/v1alpha3
kind: MachineDeployment
metadata:
  name: secured-workload-worker
  labels:
    cluster.x-k8s.io/cluster-name: secured-workload
    # Labels beyond this point are for example purposes,
    # feel free to add more or change with something more meaningful.
    # Sync these values with spec.selector.matchLabels and spec.template.metadata.labels.
    nodepool: nodepool-0
spec:
  clusterName: secured-workload
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/cluster-name: secured-workload
      nodepool: nodepool-0
  template:
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: secured-workload
        nodepool: nodepool-0
    spec:
      clusterName: secured-workload
      version: v1.17.3
      bootstrap:
        configRef:
          name: cis-benchmark-worker
          apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: ami-0ad797a22a747425e
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
        kind: AWSMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha3
kind: AWSMachineTemplate
metadata:
  name: ami-0ad797a22a747425e
spec:
  template:
    spec:
      instanceType: t3.large
      # This IAM profile is part of the pre-requisites.
      iamInstanceProfile: "nodes.cluster-api-provider-aws.sigs.k8s.io"
      # Change this value to a valid SSH Key Pair present in your AWS Account.
      sshKeyName: cluster-api-provider-aws
      imageLookupOrg: "894844345642"
      imageLookupBaseOS: "amazon-2"
      ami:
        id: "ami-0ad797a22a747425e"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha3
kind: KubeadmConfigTemplate
metadata:
  name: cis-benchmark-worker
spec:
  template:
    spec:
      # For more information about these values,
      # refer to the Kubeadm Bootstrap Provider documentation.
      joinConfiguration:
        nodeRegistration:
          name: '{{ ds.meta_data.local_hostname }}'
          kubeletExtraArgs:
            cloud-provider: aws
            read-only-port: "0"
            allow-privileged: "false"
            event-qps: "0"