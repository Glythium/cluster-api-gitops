apiVersion: v1
kind: ServiceAccount
metadata:
  name: metrics-server
  labels:
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-4.3.0
    app.kubernetes.io/instance: metrics-server
    app.kubernetes.io/managed-by: Helm
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:metrics-server
  labels:
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-4.3.0
    app.kubernetes.io/instance: metrics-server
    app.kubernetes.io/managed-by: Helm
  namespace: monitoring
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/stats
  verbs:
  - get
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metrics-server:system:auth-delegator
  namespace: monitoring
  labels:
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-4.3.0
    app.kubernetes.io/instance: metrics-server
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: metrics-server
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:metrics-server
  labels:
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-4.3.0
    app.kubernetes.io/instance: metrics-server
    app.kubernetes.io/managed-by: Helm
  namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:metrics-server
subjects:
- kind: ServiceAccount
  name: metrics-server
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: metrics-server-auth-reader
  namespace: monitoring
  labels:
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-4.3.0
    app.kubernetes.io/instance: metrics-server
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: metrics-server
  namespace: monitoring
---
apiVersion: v1
kind: Service
metadata:
  name: metrics-server
  labels:
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-4.3.0
    app.kubernetes.io/instance: metrics-server
    app.kubernetes.io/managed-by: Helm
  namespace: monitoring
spec:
  type: ClusterIP
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
    nodePort: null
  selector:
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/instance: metrics-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-server
  labels:
    app.kubernetes.io/name: metrics-server
    helm.sh/chart: metrics-server-4.3.0
    app.kubernetes.io/instance: metrics-server
    app.kubernetes.io/managed-by: Helm
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: metrics-server
      app.kubernetes.io/instance: metrics-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: metrics-server
        helm.sh/chart: metrics-server-4.3.0
        app.kubernetes.io/instance: metrics-server
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: metrics-server
      containers:
      - name: metrics-server
        image: docker.io/bitnami/metrics-server:0.3.7-debian-10-r89
        imagePullPolicy: IfNotPresent
        ports:
        - name: https
          containerPort: 8443
        command:
        - metrics-server
        - --secure-port=8443
        resources:
          limits: {}
          requests: {}
