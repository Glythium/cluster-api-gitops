apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: dex
    helm.sh/chart: dex-2.10.0
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: 2.23.0
    app.kubernetes.io/managed-by: Helm
  name: dex
  namespace: sso
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: dex
    helm.sh/chart: dex-2.10.0
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: 2.23.0
    app.kubernetes.io/managed-by: Helm
  name: dex
  namespace: sso
rules:
- apiGroups:
  - dex.coreos.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: dex
    helm.sh/chart: dex-2.10.0
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: 2.23.0
    app.kubernetes.io/managed-by: Helm
  name: dex
  namespace: sso
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex
  namespace: sso
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: dex
    helm.sh/chart: dex-2.10.0
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: 2.23.0
    app.kubernetes.io/managed-by: Helm
  name: dex
  namespace: sso
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - create
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: dex
    helm.sh/chart: dex-2.10.0
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: 2.23.0
    app.kubernetes.io/managed-by: Helm
  name: dex
  namespace: sso
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dex
subjects:
- kind: ServiceAccount
  name: dex
  namespace: sso
---
apiVersion: v1
kind: Service
metadata:
  name: dex
  labels:
    app.kubernetes.io/name: dex
    helm.sh/chart: dex-2.10.0
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: 2.23.0
    app.kubernetes.io/managed-by: Helm
  namespace: sso
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: http
    targetPort: http
    port: 32000
  - name: telemetry
    targetPort: telemetry
    port: 37000
  selector:
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: dex
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dex
  labels:
    app.kubernetes.io/name: dex
    helm.sh/chart: dex-2.10.0
    app.kubernetes.io/instance: dex
    app.kubernetes.io/version: 2.23.0
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: dex
  namespace: sso
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: dex
      app.kubernetes.io/instance: dex
      app.kubernetes.io/component: dex
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dex
        app.kubernetes.io/instance: dex
        app.kubernetes.io/component: dex
      annotations:
        checksum/config: e4bb6b690c7cd2e38f2cbc2e1f55d15f9024f609576a46c71ff0a6ea251281ad
    spec:
      serviceAccountName: dex
      nodeSelector: {}
      containers:
      - name: main
        image: vmware-docker-tkg.bintray.io/dex:v2.22.0_vmware.1
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/dex
        - serve
        - /etc/dex/cfg/config.yaml
        resources: null
        ports:
        - name: http
          containerPort: 5556
          protocol: TCP
        - name: telemetry
          containerPort: 5558
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 1
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 1
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 1
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 1
        env: []
        volumeMounts:
        - mountPath: /etc/dex/cfg
          name: config
      volumes:
      - secret:
          defaultMode: 420
          items:
          - key: config.yaml
            path: config.yaml
          secretName: dex
        name: config
